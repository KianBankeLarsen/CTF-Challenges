definitions:
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.FlagRequest:
    properties:
      flag:
        type: string
    required:
    - flag
    type: object
  handlers.FlagResponse:
    properties:
      status:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.TestResponse:
    properties:
      started:
        type: boolean
      verified:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /challenges:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Callenges List
      tags:
      - challenges
    post:
      consumes:
      - multipart/form-data
      parameters:
      - collectionFormat: multi
        description: 'Allowed filenames: challenge.yml, challenge.zip, handout.zip,
          solution.zip'
        in: formData
        items:
          type: file
        name: upload[]
        required: true
        type: array
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Challenge Add
      tags:
      - challenges
  /challenges/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Challenge Delete
      tags:
      - challenges
    put:
      consumes:
      - multipart/form-data
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      - collectionFormat: multi
        description: 'Allowed filenames: challenge.yml, challenge.zip, handout.zip,
          solution.zip'
        in: formData
        items:
          type: file
        name: upload[]
        required: true
        type: array
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Challenge Update
      tags:
      - challenges
  /challenges/{id}/download:
    get:
      description: Downloads a challenge
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      - description: Token
        in: query
        name: token
        required: true
        type: string
      responses:
        "200":
          description: Challenge file
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Download challenge
      tags:
      - challenges
  /challenges/{id}/logs:
    get:
      description: Returns the logs of a challenge
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Logs
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get challenge logs
      tags:
      - challenges
  /challenges/{id}/publish:
    post:
      consumes:
      - application/json
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Challenge Publish
      tags:
      - challenges
  /challenges/{id}/start:
    post:
      consumes:
      - application/json
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Challenge Start
      tags:
      - challenges
  /challenges/{id}/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Challenge Status
      tags:
      - challenges
  /challenges/{id}/stop:
    post:
      consumes:
      - application/json
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Challenge Stop
      tags:
      - challenges
  /solutions/{id}/download:
    get:
      description: Downloads a solution
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      - description: Token
        in: query
        name: token
        required: true
        type: string
      responses:
        "200":
          description: Challenge file
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Download solution
      tags:
      - solutions
  /solutions/{id}/start:
    post:
      description: Starts a test for a challenge
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Start a test for a challenge
      tags:
      - solutions
  /solutions/{id}/stop:
    post:
      consumes:
      - application/json
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Solution Stop
      tags:
      - solutions
  /solutions/{id}/verify:
    post:
      consumes:
      - application/json
      description: Verifies the flag for a challenge
      parameters:
      - description: Challenge ID
        in: path
        name: id
        required: true
        type: string
      - description: Flag request
        in: body
        name: flag
        required: true
        schema:
          $ref: '#/definitions/handlers.FlagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.FlagResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Verify a challenge flag
      tags:
      - solutions
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: User Login
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer <jwt-token>"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
